/*
 * PLAYERView.java
 */

package player;

import java.awt.Color;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.media.CannotRealizeException;
import javax.media.NoPlayerException;
import javax.swing.UnsupportedLookAndFeelException;
import org.jdesktop.application.Action;
import org.jdesktop.application.ResourceMap;
import org.jdesktop.application.SingleFrameApplication;
import org.jdesktop.application.FrameView;
import org.jdesktop.application.TaskMonitor;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import javax.media.Time;
import javax.swing.AbstractAction;
import javax.swing.Timer;
import javax.swing.Icon;
import javax.swing.JDialog;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.UIManager;

/**
 * The application's main frame.
 */
public class PLAYERView extends FrameView {

    public PLAYERView(SingleFrameApplication app) {
        super(app);


        
        initComponents();
        // status bar initialization - message timeout, idle icon and busy animation, etc
        ResourceMap resourceMap = getResourceMap();
        int messageTimeout = resourceMap.getInteger("StatusBar.messageTimeout");
        messageTimer = new Timer(messageTimeout, new ActionListener() {
            public void actionPerformed(ActionEvent e) {
                statusMessageLabel.setText("");
            }
        });
        messageTimer.setRepeats(false);
        int busyAnimationRate = resourceMap.getInteger("StatusBar.busyAnimationRate");
        for (int i = 0; i < busyIcons.length; i++) {
            busyIcons[i] = resourceMap.getIcon("StatusBar.busyIcons[" + i + "]");
        }
        busyIconTimer = new Timer(busyAnimationRate, new ActionListener() {
            public void actionPerformed(ActionEvent e) {
                busyIconIndex = (busyIconIndex + 1) % busyIcons.length;
                statusAnimationLabel.setIcon(busyIcons[busyIconIndex]);
            }
        });
        idleIcon = resourceMap.getIcon("StatusBar.idleIcon");
        statusAnimationLabel.setIcon(idleIcon);
        progressBar.setVisible(false);

        // connecting action tasks to status bar via TaskMonitor
        TaskMonitor taskMonitor = new TaskMonitor(getApplication().getContext());
        taskMonitor.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                String propertyName = evt.getPropertyName();
                if ("started".equals(propertyName)) {
                    if (!busyIconTimer.isRunning()) {
                        statusAnimationLabel.setIcon(busyIcons[0]);
                        busyIconIndex = 0;
                        busyIconTimer.start();
                    }
                    progressBar.setVisible(true);
                    progressBar.setIndeterminate(true);
                } else if ("done".equals(propertyName)) {
                    busyIconTimer.stop();
                    statusAnimationLabel.setIcon(idleIcon);
                    progressBar.setVisible(false);
                    progressBar.setValue(0);
                } else if ("message".equals(propertyName)) {
                    String text = (String)(evt.getNewValue());
                    statusMessageLabel.setText((text == null) ? "" : text);
                    messageTimer.restart();
                } else if ("progress".equals(propertyName)) {
                    int value = (Integer)(evt.getNewValue());
                    progressBar.setVisible(true);
                    progressBar.setIndeterminate(false);
                    progressBar.setValue(value);
                }
            }
        });
    }
    public void PLAYERView() throws ClassNotFoundException, InstantiationException, IllegalAccessException, UnsupportedLookAndFeelException
    {
        UIManager.setLookAndFeel("com.sun.java.swing.plaf.windows.WindowsClassicLookAndFeel");
        initComponents();
    }

    @Action
    public void showAboutBox() {
        if (aboutBox == null) {
            JFrame mainFrame = PLAYERApp.getApplication().getMainFrame();
            aboutBox = new PLAYERAboutBox(mainFrame);
            aboutBox.setLocationRelativeTo(mainFrame);
        }
        PLAYERApp.getApplication().show(aboutBox);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        mainPanel = new javax.swing.JPanel();
        property_tab = new javax.swing.JPanel();
        property_tab_mainpanel = new javax.swing.JPanel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel2 = new javax.swing.JPanel();
        properties_panel = new javax.swing.JPanel();
        timePanel = new javax.swing.JPanel();
        ALBUM_textfield = new javax.swing.JTextField();
        AUDIO_textfield = new javax.swing.JTextField();
        playing_file_heading_textfield = new javax.swing.JTextField();
        property_panel_left = new javax.swing.JPanel();
        artist_textfield = new javax.swing.JTextField();
        album_textfield = new javax.swing.JTextField();
        track_textfield = new javax.swing.JTextField();
        genre_textfield = new javax.swing.JTextField();
        year_textfield = new javax.swing.JTextField();
        jButton8 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        property_panel_right = new javax.swing.JPanel();
        version_textfield = new javax.swing.JTextField();
        layer_textfield = new javax.swing.JTextField();
        channel_textfield = new javax.swing.JTextField();
        copyrighted_textfield = new javax.swing.JTextField();
        crced_textfield = new javax.swing.JTextField();
        emphasis_textfield = new javax.swing.JTextField();
        propertyPannel_middle = new javax.swing.JPanel();
        time_panel_textfield = new javax.swing.JTextField();
        jPanel6 = new javax.swing.JPanel();
        jPanel7 = new javax.swing.JPanel();
        jPanel8 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        green_slidebar = new javax.swing.JSlider();
        jLabel1 = new javax.swing.JLabel();
        red_label = new javax.swing.JLabel();
        blue_label = new javax.swing.JLabel();
        green_label = new javax.swing.JLabel();
        red_slidebar = new javax.swing.JSlider();
        blue_slidebar = new javax.swing.JSlider();
        video_panel = new javax.swing.JPanel();
        play_progress_bar = new javax.swing.JProgressBar();
        panel_video = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        M3UFileChooser = new javax.swing.JFileChooser();
        playlist_panel = new javax.swing.JPanel();
        playlist_scrollpane = new javax.swing.JScrollPane();
        jPanel1 = new javax.swing.JPanel();
        volume_panel = new javax.swing.JPanel();
        play_button = new javax.swing.JButton();
        play_slider = new javax.swing.JSlider();
        stop_button = new javax.swing.JButton();
        next_button = new javax.swing.JButton();
        previous_button = new javax.swing.JButton();
        volume_control_slider = new javax.swing.JSlider();
        volume_progressbar = new javax.swing.JProgressBar();
        play_right_panel = new javax.swing.JPanel();
        playlist_visibility_button = new javax.swing.JButton();
        loop_checkbox = new javax.swing.JCheckBox();
        speed_checkbox = new javax.swing.JCheckBox();
        volume_label = new javax.swing.JLabel();
        saveButton = new javax.swing.JButton();
        play_left_panel = new javax.swing.JPanel();
        artist_label = new javax.swing.JLabel();
        album_label = new javax.swing.JLabel();
        genre_label = new javax.swing.JLabel();
        year_label = new javax.swing.JLabel();
        track_label = new javax.swing.JLabel();
        menuBar = new javax.swing.JMenuBar();
        javax.swing.JMenu fileMenu = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();
        javax.swing.JMenuItem exitMenuItem = new javax.swing.JMenuItem();
        javax.swing.JMenu helpMenu = new javax.swing.JMenu();
        javax.swing.JMenuItem aboutMenuItem = new javax.swing.JMenuItem();
        statusPanel = new javax.swing.JPanel();
        javax.swing.JSeparator statusPanelSeparator = new javax.swing.JSeparator();
        statusMessageLabel = new javax.swing.JLabel();
        statusAnimationLabel = new javax.swing.JLabel();
        progressBar = new javax.swing.JProgressBar();

        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(player.PLAYERApp.class).getContext().getResourceMap(PLAYERView.class);
        mainPanel.setBackground(resourceMap.getColor("mainPanel.background")); // NOI18N
        mainPanel.setMinimumSize(new java.awt.Dimension(500, 500));
        mainPanel.setName("mainPanel"); // NOI18N

        property_tab.setBackground(resourceMap.getColor("property_tab.background")); // NOI18N
        property_tab.setName("property_tab"); // NOI18N

        property_tab_mainpanel.setBackground(resourceMap.getColor("property_tab_mainpanel.background")); // NOI18N
        property_tab_mainpanel.setName("property_tab_mainpanel"); // NOI18N

        jTabbedPane1.setBackground(resourceMap.getColor("jTabbedPane1.background")); // NOI18N
        jTabbedPane1.setForeground(resourceMap.getColor("jTabbedPane1.foreground")); // NOI18N
        jTabbedPane1.setTabPlacement(javax.swing.JTabbedPane.BOTTOM);
        jTabbedPane1.setDoubleBuffered(true);
        jTabbedPane1.setName("jTabbedPane1"); // NOI18N

        jPanel2.setName("jPanel2"); // NOI18N

        properties_panel.setBackground(resourceMap.getColor("properties_panel.background")); // NOI18N
        properties_panel.setForeground(resourceMap.getColor("properties_panel.foreground")); // NOI18N
        properties_panel.setName("properties_panel"); // NOI18N

        timePanel.setBackground(resourceMap.getColor("timePanel.background")); // NOI18N
        timePanel.setName("timePanel"); // NOI18N

        ALBUM_textfield.setBackground(resourceMap.getColor("ALBUM_textfield.background")); // NOI18N
        ALBUM_textfield.setEditable(false);
        ALBUM_textfield.setFont(resourceMap.getFont("ALBUM_textfield.font")); // NOI18N
        ALBUM_textfield.setForeground(resourceMap.getColor("ALBUM_textfield.foreground")); // NOI18N
        ALBUM_textfield.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        ALBUM_textfield.setText(resourceMap.getString("ALBUM_textfield.text")); // NOI18N
        ALBUM_textfield.setName("ALBUM_textfield"); // NOI18N

        AUDIO_textfield.setBackground(resourceMap.getColor("AUDIO_textfield.background")); // NOI18N
        AUDIO_textfield.setEditable(false);
        AUDIO_textfield.setFont(resourceMap.getFont("AUDIO_textfield.font")); // NOI18N
        AUDIO_textfield.setForeground(resourceMap.getColor("AUDIO_textfield.foreground")); // NOI18N
        AUDIO_textfield.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        AUDIO_textfield.setText(resourceMap.getString("AUDIO_textfield.text")); // NOI18N
        AUDIO_textfield.setName("AUDIO_textfield"); // NOI18N

        playing_file_heading_textfield.setBackground(resourceMap.getColor("playing_file_heading_textfield.background")); // NOI18N
        playing_file_heading_textfield.setEditable(false);
        playing_file_heading_textfield.setFont(resourceMap.getFont("playing_file_heading_textfield.font")); // NOI18N
        playing_file_heading_textfield.setForeground(resourceMap.getColor("playing_file_heading_textfield.foreground")); // NOI18N
        playing_file_heading_textfield.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        playing_file_heading_textfield.setText(resourceMap.getString("playing_file_heading_textfield.text")); // NOI18N
        playing_file_heading_textfield.setName("playing_file_heading_textfield"); // NOI18N

        javax.swing.GroupLayout timePanelLayout = new javax.swing.GroupLayout(timePanel);
        timePanel.setLayout(timePanelLayout);
        timePanelLayout.setHorizontalGroup(
            timePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, timePanelLayout.createSequentialGroup()
                .addComponent(ALBUM_textfield, javax.swing.GroupLayout.PREFERRED_SIZE, 242, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 297, Short.MAX_VALUE)
                .addComponent(AUDIO_textfield, javax.swing.GroupLayout.PREFERRED_SIZE, 223, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addComponent(playing_file_heading_textfield, javax.swing.GroupLayout.DEFAULT_SIZE, 762, Short.MAX_VALUE)
        );
        timePanelLayout.setVerticalGroup(
            timePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, timePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(playing_file_heading_textfield, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(59, 59, 59)
                .addGroup(timePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(ALBUM_textfield, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(AUDIO_textfield, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        property_panel_left.setBackground(resourceMap.getColor("property_panel_left.background")); // NOI18N
        property_panel_left.setName("property_panel_left"); // NOI18N

        artist_textfield.setBackground(resourceMap.getColor("artist_textfield.background")); // NOI18N
        artist_textfield.setForeground(resourceMap.getColor("artist_textfield.foreground")); // NOI18N
        artist_textfield.setText(resourceMap.getString("artist_textfield.text")); // NOI18N
        artist_textfield.setName("artist_textfield"); // NOI18N

        album_textfield.setBackground(resourceMap.getColor("album_textfield.background")); // NOI18N
        album_textfield.setEditable(false);
        album_textfield.setForeground(resourceMap.getColor("album_textfield.foreground")); // NOI18N
        album_textfield.setText(resourceMap.getString("album_textfield.text")); // NOI18N
        album_textfield.setName("album_textfield"); // NOI18N

        track_textfield.setBackground(resourceMap.getColor("track_textfield.background")); // NOI18N
        track_textfield.setEditable(false);
        track_textfield.setForeground(resourceMap.getColor("track_textfield.foreground")); // NOI18N
        track_textfield.setText(resourceMap.getString("track_textfield.text")); // NOI18N
        track_textfield.setName("track_textfield"); // NOI18N

        genre_textfield.setBackground(resourceMap.getColor("genre_textfield.background")); // NOI18N
        genre_textfield.setEditable(false);
        genre_textfield.setForeground(resourceMap.getColor("genre_textfield.foreground")); // NOI18N
        genre_textfield.setText(resourceMap.getString("genre_textfield.text")); // NOI18N
        genre_textfield.setName("genre_textfield"); // NOI18N

        year_textfield.setBackground(resourceMap.getColor("year_textfield.background")); // NOI18N
        year_textfield.setEditable(false);
        year_textfield.setForeground(resourceMap.getColor("year_textfield.foreground")); // NOI18N
        year_textfield.setText(resourceMap.getString("year_textfield.text")); // NOI18N
        year_textfield.setName("year_textfield"); // NOI18N

        jButton8.setText(resourceMap.getString("jButton8.text")); // NOI18N
        jButton8.setName("jButton8"); // NOI18N
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });

        jButton6.setText(resourceMap.getString("jButton6.text")); // NOI18N
        jButton6.setName("jButton6"); // NOI18N
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jButton7.setText(resourceMap.getString("jButton7.text")); // NOI18N
        jButton7.setName("jButton7"); // NOI18N
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout property_panel_leftLayout = new javax.swing.GroupLayout(property_panel_left);
        property_panel_left.setLayout(property_panel_leftLayout);
        property_panel_leftLayout.setHorizontalGroup(
            property_panel_leftLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(property_panel_leftLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(property_panel_leftLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(property_panel_leftLayout.createSequentialGroup()
                        .addComponent(jButton8)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton7))
                    .addGroup(property_panel_leftLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(year_textfield, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 241, Short.MAX_VALUE)
                        .addComponent(genre_textfield, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 241, Short.MAX_VALUE)
                        .addComponent(track_textfield, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 241, Short.MAX_VALUE)
                        .addComponent(album_textfield, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 241, Short.MAX_VALUE)
                        .addComponent(artist_textfield, javax.swing.GroupLayout.DEFAULT_SIZE, 241, Short.MAX_VALUE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        property_panel_leftLayout.setVerticalGroup(
            property_panel_leftLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, property_panel_leftLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(artist_textfield, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(album_textfield, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(track_textfield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(genre_textfield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(year_textfield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(property_panel_leftLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton8)
                    .addComponent(jButton6)
                    .addComponent(jButton7))
                .addGap(77, 77, 77))
        );

        property_panel_right.setBackground(resourceMap.getColor("property_panel_right.background")); // NOI18N
        property_panel_right.setName("property_panel_right"); // NOI18N

        version_textfield.setBackground(resourceMap.getColor("version_textfield.background")); // NOI18N
        version_textfield.setEditable(false);
        version_textfield.setForeground(resourceMap.getColor("version_textfield.foreground")); // NOI18N
        version_textfield.setText(resourceMap.getString("version_textfield.text")); // NOI18N
        version_textfield.setName("version_textfield"); // NOI18N

        layer_textfield.setBackground(resourceMap.getColor("layer_textfield.background")); // NOI18N
        layer_textfield.setEditable(false);
        layer_textfield.setForeground(resourceMap.getColor("layer_textfield.foreground")); // NOI18N
        layer_textfield.setText(resourceMap.getString("layer_textfield.text")); // NOI18N
        layer_textfield.setName("layer_textfield"); // NOI18N

        channel_textfield.setBackground(resourceMap.getColor("channel_textfield.background")); // NOI18N
        channel_textfield.setEditable(false);
        channel_textfield.setForeground(resourceMap.getColor("channel_textfield.foreground")); // NOI18N
        channel_textfield.setText(resourceMap.getString("channel_textfield.text")); // NOI18N
        channel_textfield.setName("channel_textfield"); // NOI18N

        copyrighted_textfield.setBackground(resourceMap.getColor("copyrighted_textfield.background")); // NOI18N
        copyrighted_textfield.setEditable(false);
        copyrighted_textfield.setForeground(resourceMap.getColor("copyrighted_textfield.foreground")); // NOI18N
        copyrighted_textfield.setText(resourceMap.getString("copyrighted_textfield.text")); // NOI18N
        copyrighted_textfield.setName("copyrighted_textfield"); // NOI18N

        crced_textfield.setBackground(resourceMap.getColor("crced_textfield.background")); // NOI18N
        crced_textfield.setEditable(false);
        crced_textfield.setForeground(resourceMap.getColor("crced_textfield.foreground")); // NOI18N
        crced_textfield.setText(resourceMap.getString("crced_textfield.text")); // NOI18N
        crced_textfield.setName("crced_textfield"); // NOI18N

        emphasis_textfield.setBackground(resourceMap.getColor("emphasis_textfield.background")); // NOI18N
        emphasis_textfield.setEditable(false);
        emphasis_textfield.setForeground(resourceMap.getColor("emphasis_textfield.foreground")); // NOI18N
        emphasis_textfield.setText(resourceMap.getString("emphasis_textfield.text")); // NOI18N
        emphasis_textfield.setName("emphasis_textfield"); // NOI18N

        javax.swing.GroupLayout property_panel_rightLayout = new javax.swing.GroupLayout(property_panel_right);
        property_panel_right.setLayout(property_panel_rightLayout);
        property_panel_rightLayout.setHorizontalGroup(
            property_panel_rightLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, property_panel_rightLayout.createSequentialGroup()
                .addGroup(property_panel_rightLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(emphasis_textfield, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 224, Short.MAX_VALUE)
                    .addComponent(crced_textfield, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 224, Short.MAX_VALUE)
                    .addComponent(copyrighted_textfield, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 224, Short.MAX_VALUE)
                    .addComponent(channel_textfield, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 224, Short.MAX_VALUE)
                    .addComponent(layer_textfield, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 224, Short.MAX_VALUE)
                    .addComponent(version_textfield, javax.swing.GroupLayout.DEFAULT_SIZE, 224, Short.MAX_VALUE))
                .addContainerGap())
        );
        property_panel_rightLayout.setVerticalGroup(
            property_panel_rightLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(property_panel_rightLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(version_textfield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(layer_textfield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(channel_textfield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(copyrighted_textfield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(crced_textfield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(emphasis_textfield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        propertyPannel_middle.setBackground(resourceMap.getColor("propertyPannel_middle.background")); // NOI18N
        propertyPannel_middle.setName("propertyPannel_middle"); // NOI18N

        time_panel_textfield.setBackground(resourceMap.getColor("time_panel_textfield.background")); // NOI18N
        time_panel_textfield.setEditable(false);
        time_panel_textfield.setFont(resourceMap.getFont("time_panel_textfield.font")); // NOI18N
        time_panel_textfield.setForeground(resourceMap.getColor("time_panel_textfield.foreground")); // NOI18N
        time_panel_textfield.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        time_panel_textfield.setText(resourceMap.getString("time_panel_textfield.text")); // NOI18N
        time_panel_textfield.setBorder(null);
        time_panel_textfield.setName("time_panel_textfield"); // NOI18N

        javax.swing.GroupLayout propertyPannel_middleLayout = new javax.swing.GroupLayout(propertyPannel_middle);
        propertyPannel_middle.setLayout(propertyPannel_middleLayout);
        propertyPannel_middleLayout.setHorizontalGroup(
            propertyPannel_middleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(time_panel_textfield, javax.swing.GroupLayout.DEFAULT_SIZE, 285, Short.MAX_VALUE)
        );
        propertyPannel_middleLayout.setVerticalGroup(
            propertyPannel_middleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(propertyPannel_middleLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(time_panel_textfield, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout properties_panelLayout = new javax.swing.GroupLayout(properties_panel);
        properties_panel.setLayout(properties_panelLayout);
        properties_panelLayout.setHorizontalGroup(
            properties_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(properties_panelLayout.createSequentialGroup()
                .addComponent(property_panel_left, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(propertyPannel_middle, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(property_panel_right, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(properties_panelLayout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(timePanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        properties_panelLayout.setVerticalGroup(
            properties_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, properties_panelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(timePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(properties_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(property_panel_right, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(properties_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(propertyPannel_middle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(property_panel_left, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(properties_panel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(properties_panel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jTabbedPane1.addTab(resourceMap.getString("jPanel2.TabConstraints.tabTitle"), jPanel2); // NOI18N

        jPanel6.setBackground(resourceMap.getColor("jPanel6.background")); // NOI18N
        jPanel6.setName("jPanel6"); // NOI18N

        jPanel7.setBackground(resourceMap.getColor("jPanel7.background")); // NOI18N
        jPanel7.setName("jPanel7"); // NOI18N

        jPanel8.setBackground(resourceMap.getColor("jPanel8.background")); // NOI18N
        jPanel8.setName("jPanel8"); // NOI18N

        jLabel5.setFont(resourceMap.getFont("jLabel5.font")); // NOI18N
        jLabel5.setText(resourceMap.getString("jLabel5.text")); // NOI18N
        jLabel5.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jLabel5.setName("jLabel5"); // NOI18N

        jLabel3.setFont(resourceMap.getFont("jLabel3.font")); // NOI18N
        jLabel3.setText(resourceMap.getString("jLabel3.text")); // NOI18N
        jLabel3.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jLabel3.setName("jLabel3"); // NOI18N

        jLabel4.setFont(resourceMap.getFont("jLabel4.font")); // NOI18N
        jLabel4.setText(resourceMap.getString("jLabel4.text")); // NOI18N
        jLabel4.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jLabel4.setName("jLabel4"); // NOI18N

        green_slidebar.setMajorTickSpacing(50);
        green_slidebar.setMaximum(255);
        green_slidebar.setPaintTicks(true);
        green_slidebar.setValue(Settings.green);
        green_slidebar.setName("green_slidebar"); // NOI18N
        green_slidebar.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                green_slidebarStateChanged(evt);
            }
        });

        jLabel1.setText(resourceMap.getString("jLabel1.text")); // NOI18N
        jLabel1.setName("jLabel1"); // NOI18N

        red_label.setText(String.valueOf(Settings.red));
        red_label.setName("red_label"); // NOI18N

        blue_label.setText(String.valueOf(Settings.blue));
        blue_label.setName("blue_label"); // NOI18N

        green_label.setText(String.valueOf(Settings.green));
        green_label.setName("green_label"); // NOI18N

        red_slidebar.setMajorTickSpacing(50);
        red_slidebar.setMaximum(255);
        red_slidebar.setPaintTicks(true);
        red_slidebar.setValue(Settings.green);
        red_slidebar.setName("red_slidebar"); // NOI18N
        red_slidebar.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                red_slidebarStateChanged(evt);
            }
        });

        blue_slidebar.setMajorTickSpacing(50);
        blue_slidebar.setMaximum(255);
        blue_slidebar.setPaintTicks(true);
        blue_slidebar.setValue(Settings.green);
        blue_slidebar.setName("blue_slidebar"); // NOI18N
        blue_slidebar.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                blue_slidebarStateChanged(evt);
            }
        });

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(red_slidebar, javax.swing.GroupLayout.PREFERRED_SIZE, 480, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(red_label, javax.swing.GroupLayout.DEFAULT_SIZE, 80, Short.MAX_VALUE))
                    .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel8Layout.createSequentialGroup()
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(blue_slidebar, javax.swing.GroupLayout.PREFERRED_SIZE, 480, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(blue_label, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel8Layout.createSequentialGroup()
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(green_slidebar, javax.swing.GroupLayout.PREFERRED_SIZE, 486, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(green_label))))
                .addGap(72, 72, 72))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel8Layout.createSequentialGroup()
                .addGap(11, 11, 11)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel8Layout.createSequentialGroup()
                        .addGap(11, 11, 11)
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(red_label, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(red_slidebar, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addGap(6, 6, 6)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel8Layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(blue_label, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 60, Short.MAX_VALUE)
                        .addComponent(blue_slidebar, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(6, 6, 6)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(green_slidebar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(green_label, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(176, 176, 176))
        );

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel7, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jTabbedPane1.addTab(resourceMap.getString("jPanel6.TabConstraints.tabTitle"), jPanel6); // NOI18N

        video_panel.setBackground(resourceMap.getColor("video_panel.background")); // NOI18N
        video_panel.setName("video_panel"); // NOI18N
        video_panel.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                video_panelPropertyChange(evt);
            }
        });

        play_progress_bar.setBackground(resourceMap.getColor("play_progress_bar.background")); // NOI18N
        play_progress_bar.setForeground(resourceMap.getColor("play_progress_bar.foreground")); // NOI18N
        play_progress_bar.setToolTipText(resourceMap.getString("play_progress_bar.toolTipText")); // NOI18N
        play_progress_bar.setDebugGraphicsOptions(javax.swing.DebugGraphics.NONE_OPTION);
        play_progress_bar.setName("play_progress_bar"); // NOI18N
        play_progress_bar.setPreferredSize(new java.awt.Dimension(146, 15));
        play_progress_bar.setStringPainted(true);
        play_progress_bar.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                play_progress_barStateChanged(evt);
            }
        });
        play_progress_bar.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                play_progress_barPropertyChange(evt);
            }
        });

        panel_video.setBackground(resourceMap.getColor("panel_video.background")); // NOI18N
        panel_video.setName("panel_video"); // NOI18N

        javax.swing.GroupLayout panel_videoLayout = new javax.swing.GroupLayout(panel_video);
        panel_video.setLayout(panel_videoLayout);
        panel_videoLayout.setHorizontalGroup(
            panel_videoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 782, Short.MAX_VALUE)
        );
        panel_videoLayout.setVerticalGroup(
            panel_videoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 364, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout video_panelLayout = new javax.swing.GroupLayout(video_panel);
        video_panel.setLayout(video_panelLayout);
        video_panelLayout.setHorizontalGroup(
            video_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(play_progress_bar, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 782, Short.MAX_VALUE)
            .addComponent(panel_video, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        video_panelLayout.setVerticalGroup(
            video_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, video_panelLayout.createSequentialGroup()
                .addComponent(panel_video, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(play_progress_bar, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jTabbedPane1.addTab(resourceMap.getString("video_panel.TabConstraints.tabTitle"), video_panel); // NOI18N

        jPanel5.setName("jPanel5"); // NOI18N

        M3UFileChooser.setApproveButtonText(resourceMap.getString("M3UFileChooser.approveButtonText")); // NOI18N
        M3UFileChooser.setCurrentDirectory(new java.io.File("D:\\backUp\\music"));
        M3UFileChooser.setName("M3UFileChooser"); // NOI18N

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(M3UFileChooser, javax.swing.GroupLayout.DEFAULT_SIZE, 782, Short.MAX_VALUE)
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(M3UFileChooser, javax.swing.GroupLayout.DEFAULT_SIZE, 388, Short.MAX_VALUE)
        );

        M3UFileChooser.setControlButtonsAreShown(false);
        PLAYERView.playlist_scrollpane.getViewport().add(PlayList.list());
        M3UFileChooser.addActionListener(new AbstractAction() {
            public void actionPerformed(ActionEvent ae)
            {
                if(JFileChooser.APPROVE_SELECTION.equals(ae.getActionCommand()))
                {
                    if(M3UFileChooser.getSelectedFile().toString().endsWith(".m3u")||M3UFileChooser.getSelectedFile().toString().endsWith(".M3U"))
                    {
                        try
                        {
                            PlayList.readFromM3UFile(M3UFileChooser.getSelectedFile());
                        }
                        catch(Exception e)
                        {}
                    }
                    else if(M3UFileChooser.getSelectedFile().toString().endsWith(".mpg")||M3UFileChooser.getSelectedFile().toString().endsWith(".MPG"))
                    {
                        PlayLinkedList.addToEndOfList(M3UFileChooser.getSelectedFile().toString());
                    }
                    else if(M3UFileChooser.getSelectedFile().toString().endsWith(".mp3")||M3UFileChooser.getSelectedFile().toString().endsWith(".MP3"))
                    {
                        PlayLinkedList.addToEndOfList(M3UFileChooser.getSelectedFile().toString());
                    }
                    else if(M3UFileChooser.getSelectedFile().toString().endsWith(".mpeg")||M3UFileChooser.getSelectedFile().toString().endsWith(".mpeg"))
                    {
                        PlayLinkedList.addToEndOfList(M3UFileChooser.getSelectedFile().toString());
                    }
                    else
                    {
                        JOptionPane.showMessageDialog(null, "File Format not supported!");
                    }
                }
            }
        });

        jTabbedPane1.addTab(resourceMap.getString("jPanel5.TabConstraints.tabTitle"), jPanel5); // NOI18N

        javax.swing.GroupLayout property_tab_mainpanelLayout = new javax.swing.GroupLayout(property_tab_mainpanel);
        property_tab_mainpanel.setLayout(property_tab_mainpanelLayout);
        property_tab_mainpanelLayout.setHorizontalGroup(
            property_tab_mainpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 787, Short.MAX_VALUE)
        );
        property_tab_mainpanelLayout.setVerticalGroup(
            property_tab_mainpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(property_tab_mainpanelLayout.createSequentialGroup()
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 416, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        playlist_panel.setBackground(resourceMap.getColor("playlist_panel.background")); // NOI18N
        playlist_panel.setName("playlist_panel"); // NOI18N

        playlist_scrollpane.setName("playlist_scrollpane"); // NOI18N

        javax.swing.GroupLayout playlist_panelLayout = new javax.swing.GroupLayout(playlist_panel);
        playlist_panel.setLayout(playlist_panelLayout);
        playlist_panelLayout.setHorizontalGroup(
            playlist_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(playlist_scrollpane, javax.swing.GroupLayout.DEFAULT_SIZE, 137, Short.MAX_VALUE)
        );
        playlist_panelLayout.setVerticalGroup(
            playlist_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(playlist_scrollpane, javax.swing.GroupLayout.DEFAULT_SIZE, 427, Short.MAX_VALUE)
        );

        jPanel1.setBackground(resourceMap.getColor("jPanel1.background")); // NOI18N
        jPanel1.setName("jPanel1"); // NOI18N

        volume_panel.setBackground(resourceMap.getColor("volume_panel.background")); // NOI18N
        volume_panel.setName("volume_panel"); // NOI18N

        play_button.setIcon(resourceMap.getIcon("play_button.icon")); // NOI18N
        play_button.setText(resourceMap.getString("play_button.text")); // NOI18N
        play_button.setAlignmentX(0.5F);
        play_button.setName("play_button"); // NOI18N
        play_button.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                play_buttonMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                play_buttonMouseReleased(evt);
            }
        });
        play_button.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                play_buttonMouseMoved(evt);
            }
        });
        play_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                play_buttonActionPerformed(evt);
            }
        });

        play_slider.setBackground(resourceMap.getColor("play_slider.background")); // NOI18N
        play_slider.setForeground(resourceMap.getColor("play_slider.foreground")); // NOI18N
        play_slider.setValue(0);
        play_slider.setName("play_slider"); // NOI18N
        play_slider.setPreferredSize(new java.awt.Dimension(146, 15));
        play_slider.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseExited(java.awt.event.MouseEvent evt) {
                play_sliderMouseExited(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                play_sliderMouseReleased(evt);
            }
        });
        play_slider.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                play_sliderStateChanged(evt);
            }
        });
        play_slider.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                play_sliderMouseDragged(evt);
            }
        });

        stop_button.setIcon(resourceMap.getIcon("stop_button.icon")); // NOI18N
        stop_button.setText(resourceMap.getString("stop_button.text")); // NOI18N
        stop_button.setName("stop_button"); // NOI18N
        stop_button.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                stop_buttonMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                stop_buttonMouseReleased(evt);
            }
        });
        stop_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                stop_buttonActionPerformed(evt);
            }
        });

        next_button.setIcon(resourceMap.getIcon("next_button.icon")); // NOI18N
        next_button.setText(resourceMap.getString("next_button.text")); // NOI18N
        next_button.setName("next_button"); // NOI18N
        next_button.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                next_buttonMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                next_buttonMouseReleased(evt);
            }
        });
        next_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                next_buttonActionPerformed(evt);
            }
        });

        previous_button.setIcon(resourceMap.getIcon("previous_button.icon")); // NOI18N
        previous_button.setText(resourceMap.getString("previous_button.text")); // NOI18N
        previous_button.setName("previous_button"); // NOI18N
        previous_button.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                previous_buttonMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                previous_buttonMouseReleased(evt);
            }
        });
        previous_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                previous_buttonActionPerformed(evt);
            }
        });

        volume_control_slider.setBackground(resourceMap.getColor("volume_control_slider.background")); // NOI18N
        volume_control_slider.setMajorTickSpacing(50);
        volume_control_slider.setMinorTickSpacing(10);
        volume_control_slider.setOrientation(javax.swing.JSlider.VERTICAL);
        volume_control_slider.setPaintTicks(true);
        volume_control_slider.setValue(100);
        volume_control_slider.setName("volume_control_slider"); // NOI18N
        volume_control_slider.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                volume_control_sliderStateChanged(evt);
            }
        });

        volume_progressbar.setOrientation(1);
        volume_progressbar.setValue(PLAYERView.volume_control_slider.getValue());
        volume_progressbar.setName("volume_progressbar"); // NOI18N
        volume_progressbar.setPreferredSize(new java.awt.Dimension(14, 146));

        play_right_panel.setBackground(resourceMap.getColor("play_right_panel.background")); // NOI18N
        play_right_panel.setName("play_right_panel"); // NOI18N

        playlist_visibility_button.setText(resourceMap.getString("playlist_visibility_button.text")); // NOI18N
        playlist_visibility_button.setName("playlist_visibility_button"); // NOI18N
        playlist_visibility_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                playlist_visibility_buttonActionPerformed(evt);
            }
        });

        loop_checkbox.setBackground(resourceMap.getColor("loop_checkbox.background")); // NOI18N
        loop_checkbox.setFont(resourceMap.getFont("loop_checkbox.font")); // NOI18N
        loop_checkbox.setForeground(resourceMap.getColor("loop_checkbox.foreground")); // NOI18N
        loop_checkbox.setText(resourceMap.getString("loop_checkbox.text")); // NOI18N
        loop_checkbox.setName("loop_checkbox"); // NOI18N
        loop_checkbox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loop_checkboxActionPerformed(evt);
            }
        });

        speed_checkbox.setBackground(resourceMap.getColor("speed_checkbox.background")); // NOI18N
        speed_checkbox.setFont(resourceMap.getFont("speed_checkbox.font")); // NOI18N
        speed_checkbox.setForeground(resourceMap.getColor("speed_checkbox.foreground")); // NOI18N
        speed_checkbox.setText(resourceMap.getString("speed_checkbox.text")); // NOI18N
        speed_checkbox.setName("speed_checkbox"); // NOI18N
        speed_checkbox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                speed_checkboxActionPerformed(evt);
            }
        });

        volume_label.setFont(resourceMap.getFont("volume_label.font")); // NOI18N
        volume_label.setForeground(resourceMap.getColor("volume_label.foreground")); // NOI18N
        volume_label.setText(String.valueOf(PLAYERView.volume_control_slider.getValue()));
        volume_label.setName("volume_label"); // NOI18N

        saveButton.setText(resourceMap.getString("saveButton.text")); // NOI18N
        saveButton.setName("saveButton"); // NOI18N
        saveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout play_right_panelLayout = new javax.swing.GroupLayout(play_right_panel);
        play_right_panel.setLayout(play_right_panelLayout);
        play_right_panelLayout.setHorizontalGroup(
            play_right_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, play_right_panelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(volume_label, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 92, Short.MAX_VALUE)
                .addGroup(play_right_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(saveButton, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(speed_checkbox, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(loop_checkbox, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(playlist_visibility_button, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 124, Short.MAX_VALUE))
                .addContainerGap())
        );
        play_right_panelLayout.setVerticalGroup(
            play_right_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, play_right_panelLayout.createSequentialGroup()
                .addComponent(saveButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(play_right_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(play_right_panelLayout.createSequentialGroup()
                        .addComponent(playlist_visibility_button)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(loop_checkbox)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(speed_checkbox))
                    .addComponent(volume_label, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(32, Short.MAX_VALUE))
        );

        play_left_panel.setBackground(resourceMap.getColor("play_left_panel.background")); // NOI18N
        play_left_panel.setName("play_left_panel"); // NOI18N

        artist_label.setForeground(resourceMap.getColor("artist_label.foreground")); // NOI18N
        artist_label.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        artist_label.setText(resourceMap.getString("artist_label.text")); // NOI18N
        artist_label.setToolTipText(PLAYERView.artist_label.getText());
        artist_label.setName("artist_label"); // NOI18N

        album_label.setForeground(resourceMap.getColor("album_label.foreground")); // NOI18N
        album_label.setText(resourceMap.getString("album_label.text")); // NOI18N
        album_label.setName("album_label"); // NOI18N

        genre_label.setForeground(resourceMap.getColor("genre_label.foreground")); // NOI18N
        genre_label.setText(resourceMap.getString("genre_label.text")); // NOI18N
        genre_label.setName("genre_label"); // NOI18N

        year_label.setForeground(resourceMap.getColor("year_label.foreground")); // NOI18N
        year_label.setText(resourceMap.getString("year_label.text")); // NOI18N
        year_label.setName("year_label"); // NOI18N

        track_label.setForeground(resourceMap.getColor("track_label.foreground")); // NOI18N
        track_label.setText(resourceMap.getString("track_label.text")); // NOI18N
        track_label.setName("track_label"); // NOI18N

        javax.swing.GroupLayout play_left_panelLayout = new javax.swing.GroupLayout(play_left_panel);
        play_left_panel.setLayout(play_left_panelLayout);
        play_left_panelLayout.setHorizontalGroup(
            play_left_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(play_left_panelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(play_left_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(year_label, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(genre_label, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(album_label, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(artist_label, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 190, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(track_label, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(61, Short.MAX_VALUE))
        );
        play_left_panelLayout.setVerticalGroup(
            play_left_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(play_left_panelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(play_left_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(track_label, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(artist_label, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(4, 4, 4)
                .addComponent(album_label, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(8, 8, 8)
                .addComponent(genre_label, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(year_label, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout volume_panelLayout = new javax.swing.GroupLayout(volume_panel);
        volume_panel.setLayout(volume_panelLayout);
        volume_panelLayout.setHorizontalGroup(
            volume_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(volume_panelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(play_left_panel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(previous_button, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(volume_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(stop_button, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(play_button, javax.swing.GroupLayout.DEFAULT_SIZE, 79, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(next_button, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(volume_control_slider, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(volume_progressbar, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(play_right_panel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addComponent(play_slider, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 924, Short.MAX_VALUE)
        );
        volume_panelLayout.setVerticalGroup(
            volume_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(volume_panelLayout.createSequentialGroup()
                .addComponent(play_slider, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(volume_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(play_right_panel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(play_left_panel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(volume_progressbar, javax.swing.GroupLayout.Alignment.TRAILING, 0, 0, Short.MAX_VALUE)
                    .addComponent(volume_control_slider, javax.swing.GroupLayout.DEFAULT_SIZE, 126, Short.MAX_VALUE)
                    .addComponent(next_button, javax.swing.GroupLayout.DEFAULT_SIZE, 126, Short.MAX_VALUE)
                    .addComponent(previous_button, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(volume_panelLayout.createSequentialGroup()
                        .addComponent(play_button, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(stop_button, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(41, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(volume_panel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(volume_panel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout property_tabLayout = new javax.swing.GroupLayout(property_tab);
        property_tab.setLayout(property_tabLayout);
        property_tabLayout.setHorizontalGroup(
            property_tabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, property_tabLayout.createSequentialGroup()
                .addComponent(property_tab_mainpanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(playlist_panel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, property_tabLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        property_tabLayout.setVerticalGroup(
            property_tabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(property_tabLayout.createSequentialGroup()
                .addGroup(property_tabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(playlist_panel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(property_tab_mainpanel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout mainPanelLayout = new javax.swing.GroupLayout(mainPanel);
        mainPanel.setLayout(mainPanelLayout);
        mainPanelLayout.setHorizontalGroup(
            mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mainPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(property_tab, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        mainPanelLayout.setVerticalGroup(
            mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, mainPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(property_tab, javax.swing.GroupLayout.DEFAULT_SIZE, 631, Short.MAX_VALUE)
                .addContainerGap())
        );

        menuBar.setName("menuBar"); // NOI18N

        fileMenu.setText(resourceMap.getString("fileMenu.text")); // NOI18N
        fileMenu.setName("fileMenu"); // NOI18N
        fileMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fileMenuActionPerformed(evt);
            }
        });

        jMenuItem1.setText(resourceMap.getString("jMenuItem1.text")); // NOI18N
        jMenuItem1.setName("jMenuItem1"); // NOI18N
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        fileMenu.add(jMenuItem1);

        jMenuItem2.setText(resourceMap.getString("jMenuItem2.text")); // NOI18N
        jMenuItem2.setName("jMenuItem2"); // NOI18N
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        fileMenu.add(jMenuItem2);

        javax.swing.ActionMap actionMap = org.jdesktop.application.Application.getInstance(player.PLAYERApp.class).getContext().getActionMap(PLAYERView.class, this);
        exitMenuItem.setAction(actionMap.get("quit")); // NOI18N
        exitMenuItem.setName("exitMenuItem"); // NOI18N
        fileMenu.add(exitMenuItem);

        menuBar.add(fileMenu);

        helpMenu.setText(resourceMap.getString("helpMenu.text")); // NOI18N
        helpMenu.setName("helpMenu"); // NOI18N

        aboutMenuItem.setAction(actionMap.get("showAboutBox")); // NOI18N
        aboutMenuItem.setName("aboutMenuItem"); // NOI18N
        helpMenu.add(aboutMenuItem);

        menuBar.add(helpMenu);

        statusPanel.setName("statusPanel"); // NOI18N

        statusPanelSeparator.setName("statusPanelSeparator"); // NOI18N

        statusMessageLabel.setName("statusMessageLabel"); // NOI18N

        statusAnimationLabel.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        statusAnimationLabel.setName("statusAnimationLabel"); // NOI18N

        progressBar.setName("progressBar"); // NOI18N

        javax.swing.GroupLayout statusPanelLayout = new javax.swing.GroupLayout(statusPanel);
        statusPanel.setLayout(statusPanelLayout);
        statusPanelLayout.setHorizontalGroup(
            statusPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(statusPanelSeparator, javax.swing.GroupLayout.DEFAULT_SIZE, 954, Short.MAX_VALUE)
            .addGroup(statusPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(statusMessageLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 784, Short.MAX_VALUE)
                .addComponent(progressBar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(statusAnimationLabel)
                .addContainerGap())
        );
        statusPanelLayout.setVerticalGroup(
            statusPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(statusPanelLayout.createSequentialGroup()
                .addComponent(statusPanelSeparator, javax.swing.GroupLayout.PREFERRED_SIZE, 2, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(statusPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(statusMessageLabel)
                    .addComponent(statusAnimationLabel)
                    .addComponent(progressBar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(3, 3, 3))
        );

        setComponent(mainPanel);
        setMenuBar(menuBar);
        setStatusBar(statusPanel);
    }// </editor-fold>//GEN-END:initComponents

    private void play_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_play_buttonActionPerformed

        if(FileManager.retFile()==null)
        {
            try {
            // TODO add your handling code here:
            CreatePlayer.createPlayer();
            } catch (IOException ex) {
            Logger.getLogger(PLAYERView.class.getName()).log(Level.SEVERE, null, ex);
            } catch (NoPlayerException ex) {
            Logger.getLogger(PLAYERView.class.getName()).log(Level.SEVERE, null, ex);
            } catch (CannotRealizeException ex) {
            Logger.getLogger(PLAYERView.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        else
        {
            try {
                CreatePlayer.startPlayer(FileManager.retFile(),0);
            } catch (IOException ex) {
                Logger.getLogger(PLAYERView.class.getName()).log(Level.SEVERE, null, ex);
            } catch (NoPlayerException ex) {
                Logger.getLogger(PLAYERView.class.getName()).log(Level.SEVERE, null, ex);
            } catch (CannotRealizeException ex) {
                Logger.getLogger(PLAYERView.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_play_buttonActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        try {
            // TODO add your handling code here:
            FileManager.getFile();
        } catch (IOException ex) {
            Logger.getLogger(PLAYERView.class.getName()).log(Level.SEVERE, null, ex);
        } catch (NoPlayerException ex) {
            Logger.getLogger(PLAYERView.class.getName()).log(Level.SEVERE, null, ex);
        } catch (CannotRealizeException ex) {
            Logger.getLogger(PLAYERView.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void stop_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_stop_buttonActionPerformed
        // TODO add your handling code here:
        CreatePlayer.stopPlayer();
        AudioProperty.removeTag();
        MPEGAudioFrameHeader.removeAudioFrameHeader();
        new ProgressBarPlay().killThread();
}//GEN-LAST:event_stop_buttonActionPerformed

    private void speed_checkboxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_speed_checkboxActionPerformed
        // TODO add your handling code here:
        if(CreatePlayer.player==null)
        {
            if(speed_checkbox.isSelected()==true)
            {
                CreatePlayer.speed=2.0;
                PLAYERView.speed_checkbox.setText("2x ON");
            }

            else
            {
                CreatePlayer.speed=1.0;
                PLAYERView.speed_checkbox.setText("2x OFF");
            }
        }
        else if(CreatePlayer.player!=null)
        {
            CreatePlayer.changeSpeedWhilePlay();
            if(CreatePlayer.IS_PLAYER_RUNNING==true)
            {
                
            }
        }
        
    }//GEN-LAST:event_speed_checkboxActionPerformed

    private void volume_control_sliderStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_volume_control_sliderStateChanged
        // TODO add your handling code here:
        volume_label.setText(String.valueOf(volume_control_slider.getValue()));
        volume_progressbar.setValue(volume_control_slider.getValue());
        volume_progressbar.repaint();
        if(CreatePlayer.player!=null)
        {
        CreatePlayer.setVolume((float)(volume_control_slider.getValue())/100);
        }
    }//GEN-LAST:event_volume_control_sliderStateChanged

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
//GEN-LAST:event_jButton6ActionPerformed
            
            
    }                                        

    private void next_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_next_buttonActionPerformed
        // TODO add your handling code here:
        PlayList.playNext();
}//GEN-LAST:event_next_buttonActionPerformed

    private void play_progress_barPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_play_progress_barPropertyChange
        // TODO add your handling code here:
//       if("progress" == evt.getPropertyName())
//       {
//           int progress = (Integer)evt.getNewValue();
//           play_progress_bar.setValue(progress);
//       }
    }//GEN-LAST:event_play_progress_barPropertyChange

    private void play_sliderStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_play_sliderStateChanged
        // TODO add your handling code here:
        
    }//GEN-LAST:event_play_sliderStateChanged

    private void loop_checkboxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loop_checkboxActionPerformed
        // TODO add your handling code here:
        if(PLAYERView.loop_checkbox.isSelected()==true)
        {
            CreatePlayer.IS_LOOP_ON=true;
            PLAYERView.loop_checkbox.setText("LOOP ON");
        }
        else
        {
            CreatePlayer.IS_LOOP_ON=false;
            PLAYERView.loop_checkbox.setText("LOOP OFF");
        }
    }//GEN-LAST:event_loop_checkboxActionPerformed

    private void previous_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_previous_buttonActionPerformed
        // TODO add your handling code here:
        PlayList.playPrevious();
}//GEN-LAST:event_previous_buttonActionPerformed

    private void play_progress_barStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_play_progress_barStateChanged
        // TODO add your handling code here:

    }//GEN-LAST:event_play_progress_barStateChanged

    private void playlist_visibility_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_playlist_visibility_buttonActionPerformed
        // TODO add your handling code here:
        if(PLAYERView.playlist_panel.isVisible())
        {
            PLAYERView.playlist_panel.setVisible(false);
            PLAYERView.playlist_visibility_button.setText("Player list OFF");
        }
        else
        {
            PLAYERView.playlist_panel.setVisible(true);
            PLAYERView.playlist_visibility_button.setText("Playe list ON");
        }
    }//GEN-LAST:event_playlist_visibility_buttonActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        try {
            PlayList.readFromM3UFile(FileManager.retFile());//GEN-LAST:event_jButton7ActionPerformed
        } catch (FileNotFoundException ex) {
            Logger.getLogger(PLAYERView.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(PLAYERView.class.getName()).log(Level.SEVERE, null, ex);
        }
    }                                        

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        // TODO add your handling code here:
        SettingFile.createSettingsFile();
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    private void video_panelPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_video_panelPropertyChange
        // TODO add your handling code here:
        // VideoPanel.visual_component.setSize(PLAYERView.video_panel.getWidth(), PLAYERView.video_panel.getHeight());
        //System.out.println(PLAYERView.video_panel.getWidth()+" : "+PLAYERView.video_panel.getHeight());
}//GEN-LAST:event_video_panelPropertyChange

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton8ActionPerformed

    private void fileMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fileMenuActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_fileMenuActionPerformed

private void green_slidebarStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_green_slidebarStateChanged
// TODO add your handling code here:
        Settings.green=PLAYERView.green_slidebar.getValue();
        PLAYERView.green_label.setText(String.valueOf(PLAYERView.green_slidebar.getValue()));
        Settings.menuBar();
        Settings.volumePanelColor();
        Settings.volume_control_slider_color();
        Settings.property_panel_color();
        Settings.propertytab_mainpanel();
        Settings.propertytab_mainpanel();
        Settings.allCheckBoxes();
        Settings.rightLeftVolumePanel();
        Settings.allSlideBars();
        Settings.mainpanel_color();
        Settings.propertyTab();
}//GEN-LAST:event_green_slidebarStateChanged

private void blue_slidebarStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_blue_slidebarStateChanged
// TODO add your handling code here:
        Settings.blue=PLAYERView.blue_slidebar.getValue();
        PLAYERView.blue_label.setText(String.valueOf(PLAYERView.blue_slidebar.getValue()));
        Settings.menuBar();
        Settings.volumePanelColor();
        Settings.volume_control_slider_color();
        Settings.property_panel_color();
        Settings.propertytab_mainpanel();
        Settings.propertytab_mainpanel();
        Settings.allCheckBoxes();
        Settings.rightLeftVolumePanel();
        Settings.allSlideBars();
        Settings.mainpanel_color();
        Settings.propertyTab();
}//GEN-LAST:event_blue_slidebarStateChanged

private void red_slidebarStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_red_slidebarStateChanged
// TODO add your handling code here:
        Settings.red=PLAYERView.red_slidebar.getValue();
        PLAYERView.red_label.setText(String.valueOf(PLAYERView.red_slidebar.getValue()));
        Settings.menuBar();
        Settings.volumePanelColor();
        Settings.volume_control_slider_color();
        Settings.property_panel_color();
        Settings.propertytab_mainpanel();
        Settings.propertytab_mainpanel();
        Settings.allCheckBoxes();
        Settings.rightLeftVolumePanel();
        Settings.allSlideBars();
        Settings.mainpanel_color();
        Settings.propertyTab();
}//GEN-LAST:event_red_slidebarStateChanged

private void saveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveButtonActionPerformed
// TODO add your handling code here:
    
    SavePlayListWindow.showWindow();
}//GEN-LAST:event_saveButtonActionPerformed

private void play_sliderMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_play_sliderMouseDragged
    
    CreatePlayer.stopPlayer();
    System.out.println("dragging");
    PLAYERView.sliderValue=PLAYERView.play_slider.getValue();
}//GEN-LAST:event_play_sliderMouseDragged

private void play_buttonMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_play_buttonMouseMoved
// TODO add your handling code here:
   
}//GEN-LAST:event_play_buttonMouseMoved

private void play_buttonMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_play_buttonMousePressed
// TODO add your handling code here:
    PLAYERView.stop_button.setBackground(Color.BLACK);
}//GEN-LAST:event_play_buttonMousePressed

private void play_buttonMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_play_buttonMouseReleased
// TODO add your handling code here:
}//GEN-LAST:event_play_buttonMouseReleased

private void stop_buttonMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_stop_buttonMousePressed
// TODO add your handling code here
    PLAYERView.stop_button.setBackground(Color.BLACK);
}//GEN-LAST:event_stop_buttonMousePressed

private void stop_buttonMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_stop_buttonMouseReleased
// TODO add your handling code here:
    PLAYERView.stop_button.setBackground(PLAYERView.volume_panel.getBackground());
}//GEN-LAST:event_stop_buttonMouseReleased

private void next_buttonMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_next_buttonMousePressed
// TODO add your handling code here:
    PLAYERView.next_button.setBackground(Color.BLACK);
}//GEN-LAST:event_next_buttonMousePressed

private void next_buttonMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_next_buttonMouseReleased
// TODO add your handling code here:
    PLAYERView.next_button.setBackground(PLAYERView.volume_panel.getBackground());
}//GEN-LAST:event_next_buttonMouseReleased

private void previous_buttonMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_previous_buttonMousePressed
// TODO add your handling code here:
    PLAYERView.previous_button.setBackground(Color.BLACK);
}//GEN-LAST:event_previous_buttonMousePressed

private void previous_buttonMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_previous_buttonMouseReleased
// TODO add your handling code here:
    PLAYERView.previous_button.setBackground(PLAYERView.volume_panel.getBackground());
}//GEN-LAST:event_previous_buttonMouseReleased

private void play_sliderMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_play_sliderMouseReleased
        
}//GEN-LAST:event_play_sliderMouseReleased

private void play_sliderMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_play_sliderMouseExited
// TODO add your handling code here:

}//GEN-LAST:event_play_sliderMouseExited

private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {                                         
// TODO add your handling code here:
    //PLAYERView.play_right_panel.add(SavePlayListWindow.showWindow()); 
}    
public void percentageOfPlayer()
{
    int value = 0;
    while(value<=56)
    {
            try {
                Thread.sleep(100);
                play_slider.setValue(value);
                value++;
            } catch (InterruptedException ex) {
                Logger.getLogger(PLAYERView.class.getName()).log(Level.SEVERE, null, ex);
            }
    }
    //Play_progress_bar.setValue(value);
}
    // Variables declaration - do not modify//GEN-BEGIN:variables
    public static javax.swing.JTextField ALBUM_textfield;
    public static javax.swing.JTextField AUDIO_textfield;
    public static javax.swing.JFileChooser M3UFileChooser;
    public static javax.swing.JLabel album_label;
    public static javax.swing.JTextField album_textfield;
    public static javax.swing.JLabel artist_label;
    public static javax.swing.JTextField artist_textfield;
    public static javax.swing.JLabel blue_label;
    public static javax.swing.JSlider blue_slidebar;
    public static javax.swing.JTextField channel_textfield;
    public static javax.swing.JTextField copyrighted_textfield;
    public static javax.swing.JTextField crced_textfield;
    public static javax.swing.JTextField emphasis_textfield;
    public static javax.swing.JLabel genre_label;
    public static javax.swing.JTextField genre_textfield;
    public static javax.swing.JLabel green_label;
    public static javax.swing.JSlider green_slidebar;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    public static javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    public static javax.swing.JTabbedPane jTabbedPane1;
    public static javax.swing.JTextField layer_textfield;
    public static javax.swing.JCheckBox loop_checkbox;
    public static javax.swing.JPanel mainPanel;
    public static javax.swing.JMenuBar menuBar;
    public static javax.swing.JButton next_button;
    public static javax.swing.JPanel panel_video;
    public static javax.swing.JButton play_button;
    public static javax.swing.JPanel play_left_panel;
    public static javax.swing.JProgressBar play_progress_bar;
    public static javax.swing.JPanel play_right_panel;
    public static javax.swing.JSlider play_slider;
    public static javax.swing.JTextField playing_file_heading_textfield;
    public static javax.swing.JPanel playlist_panel;
    public static javax.swing.JScrollPane playlist_scrollpane;
    public static javax.swing.JButton playlist_visibility_button;
    public static javax.swing.JButton previous_button;
    private javax.swing.JProgressBar progressBar;
    public static javax.swing.JPanel properties_panel;
    public static javax.swing.JPanel propertyPannel_middle;
    public static javax.swing.JPanel property_panel_left;
    public static javax.swing.JPanel property_panel_right;
    public static javax.swing.JPanel property_tab;
    public static javax.swing.JPanel property_tab_mainpanel;
    public static javax.swing.JLabel red_label;
    public static javax.swing.JSlider red_slidebar;
    public static javax.swing.JButton saveButton;
    public static javax.swing.JCheckBox speed_checkbox;
    private javax.swing.JLabel statusAnimationLabel;
    private javax.swing.JLabel statusMessageLabel;
    private javax.swing.JPanel statusPanel;
    public static javax.swing.JButton stop_button;
    public static javax.swing.JPanel timePanel;
    public static javax.swing.JTextField time_panel_textfield;
    public static javax.swing.JLabel track_label;
    public static javax.swing.JTextField track_textfield;
    public static javax.swing.JTextField version_textfield;
    public static javax.swing.JPanel video_panel;
    public static javax.swing.JSlider volume_control_slider;
    public static javax.swing.JLabel volume_label;
    public static javax.swing.JPanel volume_panel;
    public static javax.swing.JProgressBar volume_progressbar;
    public static javax.swing.JLabel year_label;
    public static javax.swing.JTextField year_textfield;
    // End of variables declaration//GEN-END:variables

    private final Timer messageTimer;
    private final Timer busyIconTimer;
    private final Icon idleIcon;
    private final Icon[] busyIcons = new Icon[15];
    private int busyIconIndex = 0;
    public static long sliderValue=0;

    private JDialog aboutBox;
}
